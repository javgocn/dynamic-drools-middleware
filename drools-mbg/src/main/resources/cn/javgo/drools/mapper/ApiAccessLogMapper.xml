<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="cn.javgo.drools.mapper.ApiAccessLogMapper">
  <resultMap id="BaseResultMap" type="cn.javgo.drools.model.ApiAccessLog">
    <id column="id" jdbcType="BIGINT" property="id" />
    <result column="user_id" jdbcType="BIGINT" property="userId" />
    <result column="operation_description" jdbcType="VARCHAR" property="operationDescription" />
    <result column="start_time" jdbcType="TIMESTAMP" property="startTime" />
    <result column="duration_ms" jdbcType="BIGINT" property="durationMs" />
    <result column="base_path" jdbcType="VARCHAR" property="basePath" />
    <result column="uri" jdbcType="VARCHAR" property="uri" />
    <result column="url" jdbcType="VARCHAR" property="url" />
    <result column="request_method" jdbcType="VARCHAR" property="requestMethod" />
    <result column="ip_address" jdbcType="VARCHAR" property="ipAddress" />
    <result column="request_params" jdbcType="VARCHAR" property="requestParams" />
    <result column="response_result" jdbcType="VARCHAR" property="responseResult" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, user_id, operation_description, start_time, duration_ms, base_path, uri, url, 
    request_method, ip_address, request_params, response_result
  </sql>
  <select id="selectByExample" parameterType="cn.javgo.drools.model.ApiAccessLogExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from api_access_log
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from api_access_log
    where id = #{id,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from api_access_log
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <delete id="deleteByExample" parameterType="cn.javgo.drools.model.ApiAccessLogExample">
    delete from api_access_log
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="cn.javgo.drools.model.ApiAccessLog">
    <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Long">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into api_access_log (user_id, operation_description, start_time, 
      duration_ms, base_path, uri, 
      url, request_method, ip_address, 
      request_params, response_result)
    values (#{userId,jdbcType=BIGINT}, #{operationDescription,jdbcType=VARCHAR}, #{startTime,jdbcType=TIMESTAMP}, 
      #{durationMs,jdbcType=BIGINT}, #{basePath,jdbcType=VARCHAR}, #{uri,jdbcType=VARCHAR}, 
      #{url,jdbcType=VARCHAR}, #{requestMethod,jdbcType=VARCHAR}, #{ipAddress,jdbcType=VARCHAR}, 
      #{requestParams,jdbcType=VARCHAR}, #{responseResult,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="cn.javgo.drools.model.ApiAccessLog">
    <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Long">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into api_access_log
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="userId != null">
        user_id,
      </if>
      <if test="operationDescription != null">
        operation_description,
      </if>
      <if test="startTime != null">
        start_time,
      </if>
      <if test="durationMs != null">
        duration_ms,
      </if>
      <if test="basePath != null">
        base_path,
      </if>
      <if test="uri != null">
        uri,
      </if>
      <if test="url != null">
        url,
      </if>
      <if test="requestMethod != null">
        request_method,
      </if>
      <if test="ipAddress != null">
        ip_address,
      </if>
      <if test="requestParams != null">
        request_params,
      </if>
      <if test="responseResult != null">
        response_result,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="userId != null">
        #{userId,jdbcType=BIGINT},
      </if>
      <if test="operationDescription != null">
        #{operationDescription,jdbcType=VARCHAR},
      </if>
      <if test="startTime != null">
        #{startTime,jdbcType=TIMESTAMP},
      </if>
      <if test="durationMs != null">
        #{durationMs,jdbcType=BIGINT},
      </if>
      <if test="basePath != null">
        #{basePath,jdbcType=VARCHAR},
      </if>
      <if test="uri != null">
        #{uri,jdbcType=VARCHAR},
      </if>
      <if test="url != null">
        #{url,jdbcType=VARCHAR},
      </if>
      <if test="requestMethod != null">
        #{requestMethod,jdbcType=VARCHAR},
      </if>
      <if test="ipAddress != null">
        #{ipAddress,jdbcType=VARCHAR},
      </if>
      <if test="requestParams != null">
        #{requestParams,jdbcType=VARCHAR},
      </if>
      <if test="responseResult != null">
        #{responseResult,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="cn.javgo.drools.model.ApiAccessLogExample" resultType="java.lang.Long">
    select count(*) from api_access_log
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update api_access_log
    <set>
      <if test="row.id != null">
        id = #{row.id,jdbcType=BIGINT},
      </if>
      <if test="row.userId != null">
        user_id = #{row.userId,jdbcType=BIGINT},
      </if>
      <if test="row.operationDescription != null">
        operation_description = #{row.operationDescription,jdbcType=VARCHAR},
      </if>
      <if test="row.startTime != null">
        start_time = #{row.startTime,jdbcType=TIMESTAMP},
      </if>
      <if test="row.durationMs != null">
        duration_ms = #{row.durationMs,jdbcType=BIGINT},
      </if>
      <if test="row.basePath != null">
        base_path = #{row.basePath,jdbcType=VARCHAR},
      </if>
      <if test="row.uri != null">
        uri = #{row.uri,jdbcType=VARCHAR},
      </if>
      <if test="row.url != null">
        url = #{row.url,jdbcType=VARCHAR},
      </if>
      <if test="row.requestMethod != null">
        request_method = #{row.requestMethod,jdbcType=VARCHAR},
      </if>
      <if test="row.ipAddress != null">
        ip_address = #{row.ipAddress,jdbcType=VARCHAR},
      </if>
      <if test="row.requestParams != null">
        request_params = #{row.requestParams,jdbcType=VARCHAR},
      </if>
      <if test="row.responseResult != null">
        response_result = #{row.responseResult,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="example != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update api_access_log
    set id = #{row.id,jdbcType=BIGINT},
      user_id = #{row.userId,jdbcType=BIGINT},
      operation_description = #{row.operationDescription,jdbcType=VARCHAR},
      start_time = #{row.startTime,jdbcType=TIMESTAMP},
      duration_ms = #{row.durationMs,jdbcType=BIGINT},
      base_path = #{row.basePath,jdbcType=VARCHAR},
      uri = #{row.uri,jdbcType=VARCHAR},
      url = #{row.url,jdbcType=VARCHAR},
      request_method = #{row.requestMethod,jdbcType=VARCHAR},
      ip_address = #{row.ipAddress,jdbcType=VARCHAR},
      request_params = #{row.requestParams,jdbcType=VARCHAR},
      response_result = #{row.responseResult,jdbcType=VARCHAR}
    <if test="example != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="cn.javgo.drools.model.ApiAccessLog">
    update api_access_log
    <set>
      <if test="userId != null">
        user_id = #{userId,jdbcType=BIGINT},
      </if>
      <if test="operationDescription != null">
        operation_description = #{operationDescription,jdbcType=VARCHAR},
      </if>
      <if test="startTime != null">
        start_time = #{startTime,jdbcType=TIMESTAMP},
      </if>
      <if test="durationMs != null">
        duration_ms = #{durationMs,jdbcType=BIGINT},
      </if>
      <if test="basePath != null">
        base_path = #{basePath,jdbcType=VARCHAR},
      </if>
      <if test="uri != null">
        uri = #{uri,jdbcType=VARCHAR},
      </if>
      <if test="url != null">
        url = #{url,jdbcType=VARCHAR},
      </if>
      <if test="requestMethod != null">
        request_method = #{requestMethod,jdbcType=VARCHAR},
      </if>
      <if test="ipAddress != null">
        ip_address = #{ipAddress,jdbcType=VARCHAR},
      </if>
      <if test="requestParams != null">
        request_params = #{requestParams,jdbcType=VARCHAR},
      </if>
      <if test="responseResult != null">
        response_result = #{responseResult,jdbcType=VARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="cn.javgo.drools.model.ApiAccessLog">
    update api_access_log
    set user_id = #{userId,jdbcType=BIGINT},
      operation_description = #{operationDescription,jdbcType=VARCHAR},
      start_time = #{startTime,jdbcType=TIMESTAMP},
      duration_ms = #{durationMs,jdbcType=BIGINT},
      base_path = #{basePath,jdbcType=VARCHAR},
      uri = #{uri,jdbcType=VARCHAR},
      url = #{url,jdbcType=VARCHAR},
      request_method = #{requestMethod,jdbcType=VARCHAR},
      ip_address = #{ipAddress,jdbcType=VARCHAR},
      request_params = #{requestParams,jdbcType=VARCHAR},
      response_result = #{responseResult,jdbcType=VARCHAR}
    where id = #{id,jdbcType=BIGINT}
  </update>
</mapper>